"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/auth.ts":
/*!*********************!*\
  !*** ./src/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   handlers: () => (/* binding */ handlers),\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(middleware)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(middleware)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @auth/prisma-adapter */ \"(middleware)/./node_modules/@auth/prisma-adapter/index.js\");\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth/providers/google */ \"(middleware)/./node_modules/next-auth/providers/google.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/prisma */ \"(middleware)/./src/lib/prisma.ts\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bcryptjs */ \"(middleware)/./node_modules/bcryptjs/dist/bcrypt.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nconst { handlers, signIn, signOut, auth } = (0,next_auth__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    adapter: (0,_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_2__.PrismaAdapter)(_lib_prisma__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n    session: {\n        strategy: \"database\"\n    },\n    providers: [\n        (0,next_auth_providers_google__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n            clientId: process.env.AUTH_GOOGLE_ID || \"\",\n            clientSecret: process.env.AUTH_GOOGLE_SECRET || \"\"\n        }),\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            credentials: {\n                email: {},\n                password: {}\n            },\n            authorize: async (credentials)=>{\n                const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_4__[\"default\"].user.findUnique({\n                    where: {\n                        email: credentials?.email\n                    }\n                });\n                if (user) {\n                    const correctPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_5___default().compare(credentials?.password, user.password || \"\");\n                    if (correctPassword) {\n                        return {\n                            id: user.id,\n                            email: user.email,\n                            name: user.username\n                        };\n                    } else {\n                        throw new Error(\"Contrase\\xf1a incorrecta\");\n                    }\n                }\n                throw new Error(\"El usuario no existe\");\n            }\n        })\n    ],\n    callbacks: {\n        async signIn ({ account, profile }) {\n            if (account?.provider === \"google\") {\n                const userExists = await _lib_prisma__WEBPACK_IMPORTED_MODULE_4__[\"default\"].user.findUnique({\n                    where: {\n                        email: profile?.email\n                    }\n                });\n                if (!userExists) {\n                    // Si el usuario no existe, crear una nueva cuenta\n                    await _lib_prisma__WEBPACK_IMPORTED_MODULE_4__[\"default\"].user.create({\n                        data: {\n                            email: profile?.email,\n                            name: profile?.name,\n                            username: profile?.email?.split(\"@\")[0]\n                        }\n                    });\n                } else if (userExists && userExists.provider !== \"google\") {\n                    // Si el usuario ya existe y fue creado por otro proveedor\n                    throw new Error(\"Este correo ya est\\xe1 registrado con otro m\\xe9todo de autenticaci\\xf3n.\");\n                }\n            }\n            return true;\n        },\n        async session ({ session, user }) {\n            const userData = await _lib_prisma__WEBPACK_IMPORTED_MODULE_4__[\"default\"].user.findUnique({\n                where: {\n                    email: session.user?.email || \"\"\n                }\n            });\n            if (userData) {\n                session.user = {\n                    id: userData.id,\n                    email: userData.email || \"\",\n                    name: userData.username,\n                    emailVerified: userData.emailVerified || null\n                };\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/login\"\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL2F1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBaUM7QUFDeUI7QUFDTDtBQUNHO0FBQ3RCO0FBQ0o7QUFFdkIsTUFBTSxFQUFFTSxRQUFRLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxJQUFJLEVBQUUsR0FBR1QscURBQVFBLENBQUM7SUFDMURVLFNBQVNSLG1FQUFhQSxDQUFDRSxtREFBTUE7SUFFN0JPLFNBQVM7UUFDUEMsVUFBVTtJQUNaO0lBQ0FDLFdBQVc7UUFDVFYsc0VBQWNBLENBQUM7WUFDYlcsVUFBVUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjLElBQUk7WUFDeENDLGNBQWNILFFBQVFDLEdBQUcsQ0FBQ0csa0JBQWtCLElBQUk7UUFDbEQ7UUFDQWxCLDJFQUFXQSxDQUFDO1lBQ1ZtQixhQUFhO2dCQUNYQyxPQUFPLENBQUM7Z0JBQ1JDLFVBQVUsQ0FBQztZQUNiO1lBQ0FDLFdBQVcsT0FBT0g7Z0JBQ2hCLE1BQU1JLE9BQU8sTUFBTXBCLG1EQUFNQSxDQUFDb0IsSUFBSSxDQUFDQyxVQUFVLENBQUM7b0JBQ3hDQyxPQUFPO3dCQUFFTCxPQUFPRCxhQUFhQztvQkFBZ0I7Z0JBQy9DO2dCQUVBLElBQUlHLE1BQU07b0JBQ1IsTUFBTUcsa0JBQWtCLE1BQU10Qix1REFBYyxDQUMxQ2UsYUFBYUUsVUFDYkUsS0FBS0YsUUFBUSxJQUFJO29CQUduQixJQUFJSyxpQkFBaUI7d0JBQ25CLE9BQU87NEJBQUVFLElBQUlMLEtBQUtLLEVBQUU7NEJBQUVSLE9BQU9HLEtBQUtILEtBQUs7NEJBQUVTLE1BQU1OLEtBQUtPLFFBQVE7d0JBQUM7b0JBQy9ELE9BQU87d0JBQ0wsTUFBTSxJQUFJQyxNQUFNO29CQUNsQjtnQkFDRjtnQkFDQSxNQUFNLElBQUlBLE1BQU07WUFDbEI7UUFDRjtLQUNEO0lBQ0RDLFdBQVc7UUFDVCxNQUFNMUIsUUFBTyxFQUFFMkIsT0FBTyxFQUFFQyxPQUFPLEVBQUU7WUFDL0IsSUFBSUQsU0FBU0UsYUFBYSxVQUFVO2dCQUNsQyxNQUFNQyxhQUFhLE1BQU1qQyxtREFBTUEsQ0FBQ29CLElBQUksQ0FBQ0MsVUFBVSxDQUFDO29CQUM5Q0MsT0FBTzt3QkFBRUwsT0FBT2MsU0FBU2Q7b0JBQWdCO2dCQUMzQztnQkFFQSxJQUFJLENBQUNnQixZQUFZO29CQUNmLGtEQUFrRDtvQkFDbEQsTUFBTWpDLG1EQUFNQSxDQUFDb0IsSUFBSSxDQUFDYyxNQUFNLENBQUM7d0JBQ3ZCQyxNQUFNOzRCQUNKbEIsT0FBT2MsU0FBU2Q7NEJBQ2hCUyxNQUFNSyxTQUFTTDs0QkFDZkMsVUFBVUksU0FBU2QsT0FBT21CLE1BQU0sSUFBSSxDQUFDLEVBQUU7d0JBRXpDO29CQUNGO2dCQUNGLE9BQU8sSUFBSUgsY0FBY0EsV0FBV0QsUUFBUSxLQUFLLFVBQVU7b0JBQ3pELDBEQUEwRDtvQkFDMUQsTUFBTSxJQUFJSixNQUFNO2dCQUNsQjtZQUNGO1lBQ0EsT0FBTztRQUNUO1FBQ0EsTUFBTXJCLFNBQVEsRUFBRUEsT0FBTyxFQUFFYSxJQUFJLEVBQUU7WUFDN0IsTUFBTWlCLFdBQVcsTUFBTXJDLG1EQUFNQSxDQUFDb0IsSUFBSSxDQUFDQyxVQUFVLENBQUM7Z0JBQzVDQyxPQUFPO29CQUFFTCxPQUFPVixRQUFRYSxJQUFJLEVBQUVILFNBQVM7Z0JBQUc7WUFDNUM7WUFDQSxJQUFJb0IsVUFBVTtnQkFDWjlCLFFBQVFhLElBQUksR0FBRztvQkFDYkssSUFBSVksU0FBU1osRUFBRTtvQkFDZlIsT0FBT29CLFNBQVNwQixLQUFLLElBQUk7b0JBQ3pCUyxNQUFNVyxTQUFTVixRQUFRO29CQUN2QlcsZUFBZUQsU0FBU0MsYUFBYSxJQUFJO2dCQUMzQztZQUNGO1lBQ0EsT0FBTy9CO1FBQ1Q7SUFDRjtJQUNBZ0MsT0FBTztRQUNMcEMsUUFBUTtJQUNWO0FBQ0YsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXV0aC50cz82MmQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOZXh0QXV0aCBmcm9tIFwibmV4dC1hdXRoXCI7XHJcbmltcG9ydCBDcmVkZW50aWFscyBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9jcmVkZW50aWFsc1wiO1xyXG5pbXBvcnQgeyBQcmlzbWFBZGFwdGVyIH0gZnJvbSBcIkBhdXRoL3ByaXNtYS1hZGFwdGVyXCI7XHJcbmltcG9ydCBHb29nbGVQcm92aWRlciBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9nb29nbGVcIjtcclxuaW1wb3J0IHByaXNtYSBmcm9tIFwiLi9saWIvcHJpc21hXCI7XHJcbmltcG9ydCBiY3J5cHQgZnJvbSBcImJjcnlwdGpzXCI7XHJcblxyXG5leHBvcnQgY29uc3QgeyBoYW5kbGVycywgc2lnbkluLCBzaWduT3V0LCBhdXRoIH0gPSBOZXh0QXV0aCh7XHJcbiAgYWRhcHRlcjogUHJpc21hQWRhcHRlcihwcmlzbWEpLFxyXG5cclxuICBzZXNzaW9uOiB7XHJcbiAgICBzdHJhdGVneTogJ2RhdGFiYXNlJywgLy8gQ2FtYmlhIGxhIGVzdHJhdGVnaWEgZGUgc2VzacOzbiBhICdkYXRhYmFzZScgcGFyYSBtYW5lamFyIGVsIHJlZ2lzdHJvIHNpbiBKV1QuXHJcbiAgfSxcclxuICBwcm92aWRlcnM6IFtcclxuICAgIEdvb2dsZVByb3ZpZGVyKHtcclxuICAgICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52LkFVVEhfR09PR0xFX0lEIHx8IFwiXCIsXHJcbiAgICAgIGNsaWVudFNlY3JldDogcHJvY2Vzcy5lbnYuQVVUSF9HT09HTEVfU0VDUkVUIHx8IFwiXCIsXHJcbiAgICB9KSxcclxuICAgIENyZWRlbnRpYWxzKHtcclxuICAgICAgY3JlZGVudGlhbHM6IHtcclxuICAgICAgICBlbWFpbDoge30sXHJcbiAgICAgICAgcGFzc3dvcmQ6IHt9LFxyXG4gICAgICB9LFxyXG4gICAgICBhdXRob3JpemU6IGFzeW5jIChjcmVkZW50aWFscykgPT4ge1xyXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcclxuICAgICAgICAgIHdoZXJlOiB7IGVtYWlsOiBjcmVkZW50aWFscz8uZW1haWwgYXMgc3RyaW5nIH0sXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmICh1c2VyKSB7XHJcbiAgICAgICAgICBjb25zdCBjb3JyZWN0UGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShcclxuICAgICAgICAgICAgY3JlZGVudGlhbHM/LnBhc3N3b3JkIGFzIHN0cmluZyxcclxuICAgICAgICAgICAgdXNlci5wYXNzd29yZCB8fCBcIlwiXHJcbiAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgIGlmIChjb3JyZWN0UGFzc3dvcmQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHsgaWQ6IHVzZXIuaWQsIGVtYWlsOiB1c2VyLmVtYWlsLCBuYW1lOiB1c2VyLnVzZXJuYW1lIH07XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb250cmFzZcOxYSBpbmNvcnJlY3RhXCIpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFbCB1c3VhcmlvIG5vIGV4aXN0ZVwiKTtcclxuICAgICAgfSxcclxuICAgIH0pLFxyXG4gIF0sXHJcbiAgY2FsbGJhY2tzOiB7XHJcbiAgICBhc3luYyBzaWduSW4oeyBhY2NvdW50LCBwcm9maWxlIH0pIHtcclxuICAgICAgaWYgKGFjY291bnQ/LnByb3ZpZGVyID09PSBcImdvb2dsZVwiKSB7XHJcbiAgICAgICAgY29uc3QgdXNlckV4aXN0cyA9IGF3YWl0IHByaXNtYS51c2VyLmZpbmRVbmlxdWUoe1xyXG4gICAgICAgICAgd2hlcmU6IHsgZW1haWw6IHByb2ZpbGU/LmVtYWlsIGFzIHN0cmluZyB9LFxyXG4gICAgICAgIH0pO1xyXG4gIFxyXG4gICAgICAgIGlmICghdXNlckV4aXN0cykge1xyXG4gICAgICAgICAgLy8gU2kgZWwgdXN1YXJpbyBubyBleGlzdGUsIGNyZWFyIHVuYSBudWV2YSBjdWVudGFcclxuICAgICAgICAgIGF3YWl0IHByaXNtYS51c2VyLmNyZWF0ZSh7XHJcbiAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICBlbWFpbDogcHJvZmlsZT8uZW1haWwsXHJcbiAgICAgICAgICAgICAgbmFtZTogcHJvZmlsZT8ubmFtZSxcclxuICAgICAgICAgICAgICB1c2VybmFtZTogcHJvZmlsZT8uZW1haWw/LnNwbGl0KFwiQFwiKVswXSxcclxuICAgICAgICAgICAgICAvLyBBZ3JlZ2EgbcOhcyBkYXRvcyBzZWfDum4gZWwgZXNxdWVtYSBxdWUgbmVjZXNpdGVzLlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh1c2VyRXhpc3RzICYmIHVzZXJFeGlzdHMucHJvdmlkZXIgIT09IFwiZ29vZ2xlXCIpIHtcclxuICAgICAgICAgIC8vIFNpIGVsIHVzdWFyaW8geWEgZXhpc3RlIHkgZnVlIGNyZWFkbyBwb3Igb3RybyBwcm92ZWVkb3JcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVzdGUgY29ycmVvIHlhIGVzdMOhIHJlZ2lzdHJhZG8gY29uIG90cm8gbcOpdG9kbyBkZSBhdXRlbnRpY2FjacOzbi5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfSxcclxuICAgIGFzeW5jIHNlc3Npb24oeyBzZXNzaW9uLCB1c2VyIH0pIHtcclxuICAgICAgY29uc3QgdXNlckRhdGEgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcclxuICAgICAgICB3aGVyZTogeyBlbWFpbDogc2Vzc2lvbi51c2VyPy5lbWFpbCB8fCBcIlwiIH0sXHJcbiAgICAgIH0pO1xyXG4gICAgICBpZiAodXNlckRhdGEpIHtcclxuICAgICAgICBzZXNzaW9uLnVzZXIgPSB7XHJcbiAgICAgICAgICBpZDogdXNlckRhdGEuaWQsXHJcbiAgICAgICAgICBlbWFpbDogdXNlckRhdGEuZW1haWwgfHwgXCJcIixcclxuICAgICAgICAgIG5hbWU6IHVzZXJEYXRhLnVzZXJuYW1lLFxyXG4gICAgICAgICAgZW1haWxWZXJpZmllZDogdXNlckRhdGEuZW1haWxWZXJpZmllZCB8fCBudWxsLCAvLyBQcm9wb3JjaW9uYSB1biB2YWxvciBwcmVkZXRlcm1pbmFkbyBwYXJhIGVtYWlsVmVyaWZpZWRcclxuICAgICAgICB9O1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBzZXNzaW9uO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIHBhZ2VzOiB7XHJcbiAgICBzaWduSW46ICcvbG9naW4nLCAvLyBDYW1iaWEgYSBsYSBydXRhIGRlIHR1IHDDoWdpbmEgZGUgaW5pY2lvIGRlIHNlc2nDs24gcGVyc29uYWxpemFkYSBzaSBsYSB0aWVuZXNcclxuICB9LFxyXG59KTtcclxuIl0sIm5hbWVzIjpbIk5leHRBdXRoIiwiQ3JlZGVudGlhbHMiLCJQcmlzbWFBZGFwdGVyIiwiR29vZ2xlUHJvdmlkZXIiLCJwcmlzbWEiLCJiY3J5cHQiLCJoYW5kbGVycyIsInNpZ25JbiIsInNpZ25PdXQiLCJhdXRoIiwiYWRhcHRlciIsInNlc3Npb24iLCJzdHJhdGVneSIsInByb3ZpZGVycyIsImNsaWVudElkIiwicHJvY2VzcyIsImVudiIsIkFVVEhfR09PR0xFX0lEIiwiY2xpZW50U2VjcmV0IiwiQVVUSF9HT09HTEVfU0VDUkVUIiwiY3JlZGVudGlhbHMiLCJlbWFpbCIsInBhc3N3b3JkIiwiYXV0aG9yaXplIiwidXNlciIsImZpbmRVbmlxdWUiLCJ3aGVyZSIsImNvcnJlY3RQYXNzd29yZCIsImNvbXBhcmUiLCJpZCIsIm5hbWUiLCJ1c2VybmFtZSIsIkVycm9yIiwiY2FsbGJhY2tzIiwiYWNjb3VudCIsInByb2ZpbGUiLCJwcm92aWRlciIsInVzZXJFeGlzdHMiLCJjcmVhdGUiLCJkYXRhIiwic3BsaXQiLCJ1c2VyRGF0YSIsImVtYWlsVmVyaWZpZWQiLCJwYWdlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/auth.ts\n");

/***/ })

});